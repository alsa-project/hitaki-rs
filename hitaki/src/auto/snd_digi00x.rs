// This file was generated by gir (https://github.com/gtk-rs/gir)
// from
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::AlsaFirewire;
use crate::QuadletNotification;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "HitakiSndDigi00x")]
    pub struct SndDigi00x(Object<ffi::HitakiSndDigi00x, ffi::HitakiSndDigi00xClass>) @implements AlsaFirewire, QuadletNotification;

    match fn {
        type_ => || ffi::hitaki_snd_digi00x_get_type(),
    }
}

impl SndDigi00x {
    pub const NONE: Option<&'static SndDigi00x> = None;

    #[doc(alias = "hitaki_snd_digi00x_new")]
    pub fn new() -> SndDigi00x {
        unsafe { from_glib_full(ffi::hitaki_snd_digi00x_new()) }
    }
}

impl Default for SndDigi00x {
    fn default() -> Self {
        Self::new()
    }
}

impl fmt::Display for SndDigi00x {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("SndDigi00x")
    }
}
