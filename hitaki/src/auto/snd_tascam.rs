// This file was generated by gir (https://github.com/gtk-rs/gir)
// from
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::AlsaFirewire;
use crate::TascamProtocol;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "HitakiSndTascam")]
    pub struct SndTascam(Object<ffi::HitakiSndTascam, ffi::HitakiSndTascamClass>) @implements AlsaFirewire, TascamProtocol;

    match fn {
        type_ => || ffi::hitaki_snd_tascam_get_type(),
    }
}

impl SndTascam {
    pub const NONE: Option<&'static SndTascam> = None;

    #[doc(alias = "hitaki_snd_tascam_new")]
    pub fn new() -> SndTascam {
        unsafe { from_glib_full(ffi::hitaki_snd_tascam_new()) }
    }
}

impl Default for SndTascam {
    fn default() -> Self {
        Self::new()
    }
}

impl fmt::Display for SndTascam {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("SndTascam")
    }
}
