// This file was generated by gir (https://github.com/gtk-rs/gir)
// from
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::AlsaFirewire;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "HitakiSndUnit")]
    pub struct SndUnit(Object<ffi::HitakiSndUnit, ffi::HitakiSndUnitClass>) @implements AlsaFirewire;

    match fn {
        type_ => || ffi::hitaki_snd_unit_get_type(),
    }
}

impl SndUnit {
    pub const NONE: Option<&'static SndUnit> = None;

    #[doc(alias = "hitaki_snd_unit_new")]
    pub fn new() -> SndUnit {
        unsafe { from_glib_full(ffi::hitaki_snd_unit_new()) }
    }
}

impl Default for SndUnit {
    fn default() -> Self {
        Self::new()
    }
}

impl fmt::Display for SndUnit {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("SndUnit")
    }
}
