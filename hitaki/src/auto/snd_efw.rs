// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::translate::*;
use hitaki_sys;
use std::fmt;
use AlsaFirewire;
use EfwProtocol;

glib_wrapper! {
    pub struct SndEfw(Object<hitaki_sys::HitakiSndEfw, hitaki_sys::HitakiSndEfwClass, SndEfwClass>) @implements AlsaFirewire, EfwProtocol;

    match fn {
        get_type => || hitaki_sys::hitaki_snd_efw_get_type(),
    }
}

impl SndEfw {
    pub fn new() -> SndEfw {
        unsafe { from_glib_full(hitaki_sys::hitaki_snd_efw_new()) }
    }
}

impl Default for SndEfw {
    fn default() -> Self {
        Self::new()
    }
}

pub const NONE_SND_EFW: Option<&SndEfw> = None;

impl fmt::Display for SndEfw {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "SndEfw")
    }
}
