// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::translate::*;
use hitaki_sys;
use std::fmt;
use AlsaFirewire;
use QuadletNotification;

glib_wrapper! {
    pub struct SndDice(Object<hitaki_sys::HitakiSndDice, hitaki_sys::HitakiSndDiceClass, SndDiceClass>) @implements AlsaFirewire, QuadletNotification;

    match fn {
        get_type => || hitaki_sys::hitaki_snd_dice_get_type(),
    }
}

impl SndDice {
    pub fn new() -> SndDice {
        unsafe { from_glib_full(hitaki_sys::hitaki_snd_dice_new()) }
    }
}

impl Default for SndDice {
    fn default() -> Self {
        Self::new()
    }
}

pub const NONE_SND_DICE: Option<&SndDice> = None;

impl fmt::Display for SndDice {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "SndDice")
    }
}
