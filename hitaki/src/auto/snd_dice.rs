// This file was generated by gir (https://github.com/gtk-rs/gir)
// from
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::AlsaFirewire;
use crate::QuadletNotification;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "HitakiSndDice")]
    pub struct SndDice(Object<ffi::HitakiSndDice, ffi::HitakiSndDiceClass>) @implements AlsaFirewire, QuadletNotification;

    match fn {
        type_ => || ffi::hitaki_snd_dice_get_type(),
    }
}

impl SndDice {
    pub const NONE: Option<&'static SndDice> = None;

    #[doc(alias = "hitaki_snd_dice_new")]
    pub fn new() -> SndDice {
        unsafe { from_glib_full(ffi::hitaki_snd_dice_new()) }
    }
}

impl Default for SndDice {
    fn default() -> Self {
        Self::new()
    }
}

impl fmt::Display for SndDice {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("SndDice")
    }
}
