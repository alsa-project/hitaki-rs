// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::object::IsA;
use glib::translate::*;
use hitaki_sys;
use std::fmt;

glib_wrapper! {
    pub struct MotuRegisterDsp(Interface<hitaki_sys::HitakiMotuRegisterDsp>);

    match fn {
        get_type => || hitaki_sys::hitaki_motu_register_dsp_get_type(),
    }
}

pub const NONE_MOTU_REGISTER_DSP: Option<&MotuRegisterDsp> = None;

pub trait MotuRegisterDspExt: 'static {
    //fn read_byte_meter(&self, meter: /*Unimplemented*/FixedArray TypeId { ns_id: 0, id: 3 }; 48) -> Result<(), glib::Error>;
}

impl<O: IsA<MotuRegisterDsp>> MotuRegisterDspExt for O {
    //fn read_byte_meter(&self, meter: /*Unimplemented*/FixedArray TypeId { ns_id: 0, id: 3 }; 48) -> Result<(), glib::Error> {
    //    unsafe { TODO: call hitaki_sys:hitaki_motu_register_dsp_read_byte_meter() }
    //}
}

impl fmt::Display for MotuRegisterDsp {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "MotuRegisterDsp")
    }
}
