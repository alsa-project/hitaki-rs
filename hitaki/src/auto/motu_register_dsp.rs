// This file was generated by gir (https://github.com/gtk-rs/gir)
// from
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::prelude::*;

glib::wrapper! {
    /// An interface for protocol of register DSP models in MOTU FireWire series.
    ///
    /// The register DSP models in Mark of the Unicorn (MOTU) FireWire series transfer isochronous
    /// packets to delivers PCM frames and MIDI messages as well as DSP parameters and metering
    /// information. The [`MotuRegisterDsp`][crate::MotuRegisterDsp] is an object interface for the parameters and
    /// metering information in the register DSP protocol.
    ///
    /// ## Signals
    ///
    ///
    /// #### `changed`
    ///  Emitted when MOTU register DSP models transfer events by messages in the sequence of
    /// isochronous packet. The event consists of encoded data. The most significant byte is the
    /// type of message. The next two bytes are two identifiers. The least significant byte is
    /// value. The meaning of identifier 0, 1 and value is decided depending on the type. For
    /// detail, see `sound/firewire/motu/motu-register-dsp-message-parser.c` in Linux kernel.
    ///
    /// Action
    ///
    /// # Implements
    ///
    /// [`MotuRegisterDspExt`][trait@crate::prelude::MotuRegisterDspExt], [`MotuRegisterDspManual`][trait@crate::prelude::MotuRegisterDspManual]
    #[doc(alias = "HitakiMotuRegisterDsp")]
    pub struct MotuRegisterDsp(Interface<ffi::HitakiMotuRegisterDsp, ffi::HitakiMotuRegisterDspInterface>);

    match fn {
        type_ => || ffi::hitaki_motu_register_dsp_get_type(),
    }
}

impl MotuRegisterDsp {
    pub const NONE: Option<&'static MotuRegisterDsp> = None;
}

mod sealed {
    pub trait Sealed {}
    impl<T: super::IsA<super::MotuRegisterDsp>> Sealed for T {}
}

/// Trait containing the part of [`struct@MotuRegisterDsp`] methods.
///
/// # Implementors
///
/// [`MotuRegisterDsp`][struct@crate::MotuRegisterDsp], [`SndMotu`][struct@crate::SndMotu]
pub trait MotuRegisterDspExt: IsA<MotuRegisterDsp> + sealed::Sealed + 'static {}

impl<O: IsA<MotuRegisterDsp>> MotuRegisterDspExt for O {}
